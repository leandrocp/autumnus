
{{!-- HTML Element --}}

<foo
 {{! <- tag }}
  string-attr="string"
  {{! ^ property }}
  {{!        ^ operator }}
  {{!         ^ string }}
  number-attr=12
  {{!         ^ number }}
  mustache-attr={{value}}
  {{!             ^ variable }}
  concat-attr="string {{mustache}}"
  {{!          ^ string }}
  {{!                 ^ tag.delimiter }}
  {{!                   ^ variable }}
  class="foo {{if condition "bar"}}"
  {{!          ^ conditional }}
  {{!             ^ variable }}
  {{!                       ^ string }}
  ...attributes
  {{! ^ property }}
></foo>

{{!-- Nested Languages --}}

<style>
  .foo {
    background-color: #ff0000;
  }
</style>

<script>
  function hello() {
  }
</script>


{{!-- Primitives --}}

{{true}}
  {{! <- boolean }}
{{false}}
  {{! <- boolean }}
{{"a string"}}
  {{! <- string }}
{{42}}
  {{! <- number }}



{{!-- Path Expression --}}

{{foo.bar}}
{{! <- @tag.delimiter }}
{{! ^ @variable }}
{{!  ^ @tag.delimiter }}
{{!   ^ @variable }}

{{this.bar}}
{{! ^ @variable.builtin }}



{{!-- Glimmer Component API --}}

<MyComponent @foo={{bar}} as |whatever|>
{{! ^ constructor }}
{{!          ^ property }}
{{!                       ^ keyword }}
{{!                          ^ operator }}
{{!                                   ^ operator }}
  {{whatever}}
</MyComponent>

<Parent::Child />
{{! ^ constructor }}
{{!    ^ constructor }}
{{!      ^ constructor }}

<Modal>
  <:header>
    {{! <- tag }}
  </:header>
  {{! ^ tag }}
</Modal>


{{!-- Helper Invocation --}}

{{some-helper (sub-expression this.property)}}
{{! ^ function }}
{{!           ^ @tag.delimiter }}
{{!            ^ function }}
{{!                           ^ variable.builtin }}
{{!                                ^ variable }}



{{!-- Keywords --}}

{{yield whatever}}
{{! ^ keyword }}

{{yield}}
{{! ^ keyword}}

{{outlet}}
{{! ^ keyword }}


{{!-- Block Statements --}}

{{#if condition}}
{{! <- @tag.delimiter }}
{{! ^ conditional }}
{{!   ^ variable }}
{{else}}
{{! ^ conditional }}
{{/if}}
{{! <- @tag.delimiter }}
{{! ^ conditional }}

{{#each array key="@index" as |item|}}
{{! <- @tag.delimiter }}
{{! ^ conditional }}
{{!     ^ variable }}
{{!           ^ property }}
{{!               ^ string }}
{{!                        ^ keyword }}
{{!                           ^ operator }}
{{!                            ^ variable }}
{{!                                ^ operator }}
{{/each}}
{{! <- @tag.delimiter }}
{{! ^ conditional }}

{{#let (or "first" "second") as |result|}}
{{! ^ conditional }}
{{/let}}
{{! ^ conditional }}

{{#with (or "first" "second") as |result|}}
{{! ^ conditional }}
{{/with}}
{{! ^ conditional }}

{{#each-in object as |result|}}
{{! ^ conditional }}
{{/each-in}}
{{! ^ conditional }}



{{!-- Comments --}}

{{! testing }}
{{! <- comment }}
<!-- testing -->
{{! <- comment }}
{{!-- testing --}}
{{! <- comment }}
